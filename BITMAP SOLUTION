#include <iostream>
#include <string>
#include <vector>

using namespace std;

void bfs(vector<vector<int> > &dist, int x, int y, int d) {  
    int n = dist.size(),
        m = dist[0].size();
    if (x >= 0 && x < n && y >= 0 && y < m && dist[x][y] > d) {
        dist[x][y] = d;
        bfs(dist, x + 1, y, d + 1);
        bfs(dist, x - 1, y, d + 1);
        bfs(dist, x, y + 1, d + 1);
        bfs(dist, x, y - 1, d + 1);
    }
    return;
}

int main() {  
    int T;
    cin >> T;
    for (;T--;) {
        int n, m;
        cin >> n >> m;
        vector<string> grid(n);
        vector<vector<int> > dist(n, vector<int> (m, 400));
        for (int i = 0; i < n; ++i) {
            cin >> grid[i];
        }
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                if (grid[i][j] == '1') {
                    bfs(dist, i, j, 0);
                }
            }
        }
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < m; ++j) {
                cout << dist[i][j] << " ";
            }
            cout << "\n";
        }
    }
    return 0;
}
